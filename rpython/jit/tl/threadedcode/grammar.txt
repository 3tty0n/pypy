IGNORE: "[ \t\n]";
DECIMAL: "-?0|[1-9][0-9]*";
FLOAT: "-?(0?|[1-9][0-9]*)\.[0-9]+([eE][-+]?[0-9]+)?";
BINOP: "(==)|[-+<]";
VARIABLE: "[a-zA-Z_][a-zA-Z0-9_]*";
DOT: ".";

main: expr* [EOF];

atom: DECIMAL | FLOAT | VARIABLE;

simple_expr: "(" simple_expr ")"
             | atom BINOP simple_expr
             | array_store
             | array_load
             | atom;

expr: "let" VARIABLE "=" expr "in"
    | "let rec" VARIABLE formal_args "=" expr ";;"
    | "Array.make" simple_expr simple_expr
    | simple_expr actual_args
    | simple_expr
    ;

formal_args: VARIABLE formal_args | VARIABLE;

actual_args: simple_expr actual_args | simple_expr;

array_load: atom DOT "(" simple_expr ")";

array_store: atom DOT "(" simple_expr ")" "<" "-" simple_expr;
