import sys, os
from rpython.jit.metainterp.ruleopt import parse, proof, codegen

def main(argv):
    here = os.path.dirname(__file__)
    def_file = os.path.join(here, "real.rules")
    out_file = os.path.join(here, "..", "optimizeopt", "autogenintrules.py")
    with open(def_file) as f:
        content = f.read()
    ast = proof.prove_source(content)
    cgen = codegen.Codegen()
    result = cgen.generate_mixin(ast)
    with open(out_file, "w") as f:
        f.write("""# Generated by ruleopt/generate.py, don't edit!

from rpython.jit.metainterp.history import ConstInt
from rpython.jit.metainterp.optimizeopt.util import (
    get_box_replacement)
from rpython.jit.metainterp.resoperation import rop

from rpython.rlib.rarithmetic import LONG_BIT, r_uint, intmask, ovfcheck, uint_mul_high
""")
        f.write(result)



if __name__ == "__main__":
    sys.exit(main(sys.argv))
